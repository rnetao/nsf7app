var express = require('express');
var path = require('path');
var fs = require('fs');
//用于创建md5加密字符串
var crypto = require('crypto');
var pg = require('pg');
var config = { 
  user: 'deploy',
  database: 'design',
  password: 'deploy',
  host: 'localhost',
  port: 5432,
  max: 20,
  idleTimeoutMillis:3000
}
var client = new pg.Client(config);
client.connect();

module.exports = function(app){
	app.get('/', function(req, res){
	  fs.readFile(path.join(__dirname, '../views', 'index.html'), 'utf-8', function (err, data) {
			if (err) throw err;
			res.writeHead(200, {"Content-Type": "text/html"});
			res.write(data);
			res.end();
		});	
	});
  app.post('/register', function(req, res){
		client.query("select * from siteuser where username='$1' or email='$2';", [req.body.username, req.body.email], function(err, result){
			if(err){
				console.log(err);
				return res.redirect('/');
			}
			if(result.rows.length == 0){
        console.log("注册失败，用户或邮箱已存在");
        return res.json({
          status: 'error',
          msg: '用户名已经存在'
        });
			}
      var md5password = crypto.createHash('md5').update(req.body.password).digest('hex');
			client.query("insert into siteuser(username, password, email, sex, birthday) values('$1', '$2', '$3', '$4', '$5');", [req.body.username, req.body.password, req.body.email, req.body.sex, req.body.birthday], function(err, result){
				if(err){
					console.log('注册失败：', err);
					return res.json({status: 'error', msg: '注册失败'});
				}
				else {
					console.log('注册成功：'+result.rows[0].id);
					return res.json({
						status: 'success',
						msg: '注册成功'
					});
				}
			})
		})
  });
}
